{"version":3,"sources":["webpack:///webpack/bootstrap c38476b549c4630c4dd1","webpack:///./src/app.ts","webpack:///./src/ControllerKeyboard.ts","webpack:///./src/EventBus.ts","webpack:///./src/Event.ts","webpack:///./src/Game.ts","webpack:///./src/Grid.ts","webpack:///./src/Point2D.ts","webpack:///./src/GameOverScreen.ts","webpack:///./src/Fruit.ts","webpack:///./src/Snake.ts","webpack:///./src/FixedQueue.ts","webpack:///./src/FruitChecker.ts","webpack:///./src/Canvases.ts"],"names":[],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c38476b549c4630c4dd1\n **/","import ControllerKeyboard from './ControllerKeyboard';\nimport Game from './Game';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const controller = new ControllerKeyboard();\n    controller.init();\n\n    let game = new Game('game', 'background', 'ui', 27, 20);\n\n    game.start();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app.ts\n **/","import EventBus from './EventBus';\n\nconst dirs = {37: 'LEFT', 38: 'UP', 39: 'RIGHT', 40: 'DOWN'};\nconst menuOptions = {89: 'YES', 78: 'NO'};\n\nclass ControllerKeyboard {\n    init () {\n        window.onkeydown = ((evt) => {\n\n            if (dirs[evt.keyCode]) {\n                evt.preventDefault();\n                EventBus.trigger('controller.direction', dirs[evt.keyCode]);\n            }\n\n            if (menuOptions[evt.keyCode]) {\n                evt.preventDefault();\n                EventBus.trigger('controller.menu', menuOptions[evt.keyCode]);\n            }\n\n        });\n    }\n}\n\nexport default ControllerKeyboard;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/ControllerKeyboard.ts\n **/","import Event from './Event';\n\n/**\n * Event bus to handle events that may occur asyncronoulsy\n */\n\nexport class EventBus {\n\n    private events: Event[] = [];\n\n    trigger (name: string, value: any) {\n        this.events.unshift(new Event(name, value));\n    }\n\n    pop (): Event {\n        return this.events.pop();\n    }\n}\n\nlet instance = new EventBus();\n\nexport default instance;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/EventBus.ts\n **/","class Event {\n    constructor(public name: string, public value: any) {}\n}\n\nexport default Event;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Event.ts\n **/","import Grid from './Grid';\nimport EventBus from './EventBus';\nimport GameOverScreen from './GameOverScreen';\nimport Fruit from './Fruit';\nimport Snake from './Snake';\nimport FruitChecker from './FruitChecker';\nimport Canvases from './Canvases';\nimport GameObject from './GameObject';\n\n/**\n * Object to control the game. Runs the game loop and manages all the objects\n */\nclass Game {\n\n    private objects: GameObject[];\n    private time = 0;\n    private requestId: number;\n    private canvases: Canvases;\n    private score = 0;\n    private fruitScore = 20;\n    private running = false;\n    private grid: Grid;\n    private snake: Snake;\n    private fruit: Fruit;\n\n    constructor (gameId, backId, uiId, width, height) {\n        this.grid = new Grid(width, height, 10, 10, 2);\n\n        this.canvases = new Canvases(gameId, backId, uiId, this.grid.canvasBounds.x, this.grid.canvasBounds.y);\n    }\n\n    stop () {\n        this.running = false;\n        this.objects = [];\n    }\n\n    close () {\n        return null;\n    }\n\n    clear () {\n        this.canvases.game.clearRect(0, 0, this.grid.canvasBounds.x, this.grid.canvasBounds.y);\n        this.canvases.ui.clearRect(0, 0, this.grid.canvasBounds.x, this.grid.canvasBounds.y);\n    }\n\n    handleEvents() {\n\n        const menuOptions = {\n            'YES': this.start,\n            'NO': this.close\n        };\n\n        let event = EventBus.pop();\n\n        while (event) {\n            switch (event.name) {\n                case 'controller.direction':\n                    this.snake.changeDir(event.value);\n                    break;\n                case 'controller.menu':\n                    if (!this.running && menuOptions[event.value]) {\n                        menuOptions[event.value].call(this);\n                    }\n                    break;\n                case 'snake.hitSelf':\n                    this.gameOver();\n                    break;\n                case 'snake.eatFruit':\n                    this.fruit.move(this.grid.randomPoint2D(this.snake.getPositions()));\n                    this.snake.grow();\n                    this.score += this.fruitScore * this.snake.speed;\n                    break;\n            }\n            event = EventBus.pop();\n        }\n    }\n\n    /**\n     * Called on each frame to advance the game state\n     */\n    step (delta) {\n        this.handleEvents();\n        this.objects.forEach((object) => object.update(delta));\n        this.clear();\n        this.objects.forEach((object) => object.draw(this.canvases));\n    }\n\n    /**\n     * Main game loop. Pass through time since last frame so we can do interpolation\n     */\n    gameLoop () {\n        this.requestId = window.requestAnimationFrame(this.gameLoop.bind(this));\n        const now = new Date().getTime();\n        const delta = now - this.time;\n        this.step(delta);\n        this.time = now;\n    }\n\n    /**\n     * Stop the game and show the game over screen\n     */\n    gameOver () {\n        this.stop();\n        this.objects.push(new GameOverScreen(this.score));\n    }\n\n    /**\n     * Start the game resetting all the game elements and starting up the game loop\n     */\n    start () {\n        this.running = true;\n        this.time = 0;\n        this.score = 0;\n        this.fruit = new Fruit(this.grid);\n        this.snake = new Snake(this.grid);\n        this.objects = [this.fruit, this.snake, new FruitChecker(this.snake, this.fruit, this.grid)];\n        this.gameLoop();\n    }\n}\n\nexport default Game;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Game.ts\n **/","import Point2D from './Point2D';\n\n/**\n * The game grid, and useful functions associated with it\n */\nclass Grid {\n    canvasBounds: Point2D;\n\n    constructor (public width: number, public height: number,\n                 private blockWidth: number, private blockHeight: number, private gap: number) {\n        this.canvasBounds = this.canvasCoordinates(new Point2D(this.width + 1, this.height + 1));\n    }\n\n    /**\n     * Convert coordinates on the game grid to canvas coordinates\n     */\n    canvasCoordinates (position: Point2D) {\n        let { x, y } = position;\n\n        x = this.gap + x * (this.blockWidth + this.gap);\n        y = this.gap + y * (this.blockHeight + this.gap);\n\n        return new Point2D(x, y);\n    }\n\n    drawBlock(canvas: CanvasRenderingContext2D, position: Point2D) {\n        const coordinates = this.canvasCoordinates(position);\n        canvas.fillRect(coordinates.x, coordinates.y, this.blockWidth, this.blockHeight);\n    }\n\n    /**\n     * Helper function to compare coordinates, useful for filter etc.\n     */\n    compareCoordinates(coordinate1: Point2D, coordinate2: Point2D) {\n        return coordinate1.x === coordinate2.x && coordinate1.y === coordinate2.y;\n    }\n\n    /**\n     * Get a random position that is not one of takenPoint2Ds\n     */\n    randomPoint2D(takenPoint2Ds: Point2D[]) {\n\n        let newPos: Point2D;\n\n        do {\n            const tempPos = new Point2D(\n                Math.floor(Math.random() * (this.width + 1)),\n                Math.floor(Math.random() * (this.height + 1))\n            );\n            const compare = (pos: Point2D) => this.compareCoordinates(tempPos, pos);\n            if (!takenPoint2Ds.some(compare)) {\n                newPos = tempPos;\n            }\n        } while (!newPos);\n\n        return newPos;\n    }\n}\n\nexport default Grid;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Grid.ts\n **/","class Point2D {\n\n    constructor (public x: number, public y: number) {}\n}\n\nexport default Point2D;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Point2D.ts\n **/","import Canvases from './Canvases';\nimport GameObject from './GameObject';\n\nclass GameOverScreen implements GameObject {\n    private currentScore = 0;\n\n    constructor(private score = 0) {}\n\n    update () {\n        if (this.currentScore !== this.score) {\n            this.currentScore += 100;\n        }\n        if (this.currentScore > this.score) {\n            this.currentScore = this.score;\n        }\n    }\n\n    draw (canvases: Canvases) {\n        const { ui } = canvases;\n        const { width, height } = ui.canvas;\n\n        ui.fillStyle = '#000000';\n        ui.fillRect(0, 0, width, height);\n        ui.fillStyle = '#FFFFFF';\n        ui.textAlign = 'center';\n        ui.font = 'normal 35px silkscreennormal';\n        ui.fillText(`Score: ${this.currentScore}`, width / 2, height / 2 - 50);\n        ui.font = 'normal 25px silkscreennormal';\n        ui.fillText('Game Over', width / 2, height / 2);\n        ui.font = 'normal 15px silkscreennormal';\n        ui.fillText('Play Again?', width / 2, height / 2 + 45);\n        ui.fillText('Y / N', width / 2, height / 2 + 65);\n    }\n\n}\n\nexport default GameOverScreen;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/GameOverScreen.ts\n **/","import Grid from './Grid';\nimport Point2D from './Point2D';\nimport Canvases from './Canvases';\nimport GameObject from './GameObject';\n\n/**\n * Fruit object, can be eaten by a snake\n */\nclass Fruit implements GameObject {\n\n    constructor(private grid: Grid, public position = new Point2D(10, 10)) {}\n\n    move (newPoint2D) {\n        this.position = newPoint2D;\n    }\n\n    update () {\n        return null;\n    }\n\n    draw (canvases: Canvases) {\n        canvases.game.fillStyle = '#000000';\n        this.grid.drawBlock(canvases.game, this.position);\n    }\n\n}\n\nexport default Fruit;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Fruit.ts\n **/","import FixedQueue from './FixedQueue';\nimport Grid from './Grid';\nimport EventBus from '././EventBus';\nimport Canvases from './Canvases';\nimport GameObject from './GameObject';\nimport Point2D from './Point2D';\n\nconst DIRECTIONS = {\n  UP: new Point2D(0, -1),\n  DOWN: new Point2D(0, 1),\n  LEFT: new Point2D(-1, 0),\n  RIGHT: new Point2D(1, 0)\n};\n\nconst OPPOSITES = {\n  UP: DIRECTIONS.DOWN,\n  DOWN: DIRECTIONS.UP,\n  LEFT: DIRECTIONS.RIGHT,\n  RIGHT: DIRECTIONS.LEFT\n};\n\n/**\n * Snake object, maintains its positions and can draw itself\n */\nclass Snake implements GameObject {\n\n    public speed = 10;\n    private positions = new FixedQueue(3, [ new Point2D(2, 2) ]);\n    private dir = DIRECTIONS.RIGHT;\n    private maxSpeed = 100;\n    private elapsedTime = 0;\n    private actionQueue = new FixedQueue<Point2D>(4);\n\n    constructor (private grid: Grid) {}\n\n    tail () {\n        return this.getPositions().slice(1);\n    }\n\n    nextPosition () {\n        const pos = this.currentPosition();\n        let next: Point2D;\n\n        if ((this.dir === DIRECTIONS.RIGHT && pos.x === this.grid.width) ||\n            (this.dir === DIRECTIONS.LEFT && pos.x === 0)) {\n            next = new Point2D(this.grid.width - pos.x, pos.y);\n        } else if ((this.dir === DIRECTIONS.DOWN && pos.y === this.grid.height) ||\n                   (this.dir === DIRECTIONS.UP && pos.y === 0)) {\n            next = new Point2D(pos.x, this.grid.height - pos.y);\n        } else {\n            next = new Point2D(pos.x + this.dir.x, pos.y + this.dir.y);\n        }\n        return next;\n    }\n\n    getFrameTime () {\n        return 1000 / (this.speed / 2);\n    }\n\n    grow () {\n        this.positions.grow(2);\n        if (this.speed < this.maxSpeed) {\n            this.speed += 1;\n        }\n    }\n\n    getPositions() {\n        return this.positions.items;\n    }\n\n    currentPosition () {\n        return this.getPositions()[0];\n    }\n\n    changeDir(direction: Point2D) {\n        this.actionQueue.add(direction);\n    }\n\n    /**\n     * Move the snake in the direction it is travelling. Snake speed is based on time elapsed\n     */\n    update (delta: number) {\n        this.elapsedTime += delta;\n        if (this.elapsedTime >= this.getFrameTime() && (this.dir.x || this.dir.y)) {\n            const newDir: any = this.actionQueue.pop();\n            if (newDir) {\n                this.dir = (this.dir !== OPPOSITES[newDir]) ? DIRECTIONS[newDir] : this.dir;\n            }\n            this.positions.add(this.nextPosition());\n\n            const compare = (pos: Point2D) => this.grid.compareCoordinates(this.currentPosition(), pos);\n            if (this.tail().some(compare)) {\n                EventBus.trigger('snake.hitSelf', true);\n            }\n\n            this.elapsedTime = 0;\n        }\n    }\n\n    draw(canvases: Canvases) {\n        canvases.game.fillStyle = '#f10087';\n\n        this.getPositions().forEach((position) => {\n            this.grid.drawBlock(canvases.game, position);\n        });\n\n    }\n}\n\nexport default Snake;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Snake.ts\n **/","class FixedQueue<T> {\n\n    items: T[];\n\n    constructor (public length: number, initialItems: T[] = []) {\n        this.items = [];\n\n        initialItems.forEach(this.add, this);\n    }\n\n    add (item: T) {\n        this.items.unshift(item);\n        if (this.items.length > this.length) {\n            this.items.pop();\n        }\n    }\n\n    pop () {\n        if (this.items.length) {\n            return this.items.pop();\n        }\n        return null;\n    }\n\n    grow (size) {\n        this.length = this.length + size;\n    }\n};\n\nexport default FixedQueue;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/FixedQueue.ts\n **/","import EventBus from './EventBus';\nimport Snake from './Snake';\nimport Fruit from './Fruit';\nimport Grid from './Grid';\nimport GameObject from './GameObject';\n\nclass FruitChecker implements GameObject {\n\n    constructor (private snake: Snake, private fruit: Fruit, private grid: Grid) {}\n\n    draw () {\n        return null;\n    }\n\n    update () {\n        if (this.grid.compareCoordinates(this.snake.currentPosition(), this.fruit.position)) {\n            EventBus.trigger('snake.eatFruit', true);\n        }\n    }\n}\n\nexport default FruitChecker;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/FruitChecker.ts\n **/","class Canvases {\n    game: CanvasRenderingContext2D;\n    back: CanvasRenderingContext2D;\n    ui: CanvasRenderingContext2D;\n\n    constructor(gameId: string, backId: string, uiId: string, x, y) {\n        this.loadCanvas('game', gameId, x, y);\n        this.loadCanvas('back', backId, x, y);\n        this.loadCanvas('ui', uiId, x, y);\n    }\n\n    loadCanvas(name: string, id: string, x, y) {\n        const canvasElement = document.getElementById(id) as HTMLCanvasElement;\n        const canvas = canvasElement.getContext('2d');\n        canvas.canvas.width = x;\n        canvas.canvas.height = y;\n        this[name] = canvas;\n    }\n}\n\nexport default Canvases;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/Canvases.ts\n **/"],"sourceRoot":""}